% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_commands.R
\name{sz_setup}
\alias{sz_setup}
\title{Setup SuperZarathu Commands}
\usage{
sz_setup(
  ai = "claude",
  project_name = "superzarathu_example_project",
  create_project = TRUE,
  type = "both"
)
}
\arguments{
\item{ai}{Character string specifying which AI to setup for. Options are
"claude" (default), "gemini", or "both".}

\item{project_name}{Character string for the project directory name
(default: "superzarathu_example_project")}

\item{create_project}{Logical, whether to create the project structure
(default: TRUE)}

\item{type}{Project type: "analysis", "shiny", or "both" (default: "both")}
}
\description{
Unified function to set up SuperZarathu commands for AI assistants and create
project structure. By default uses Claude, but can be configured for Gemini.
}
\details{
This function performs the following:
1. Creates a standard Zarathu project structure based on R_PROJECT_TEMPLATE.md
2. Sets up AI assistant commands based on the chosen AI platform
6 commands available: preprocess, label, table, plot, rshiny, doctor

The project structure follows the integrated template with:
- data/ directory (raw/processed subdirectories)
- scripts/ directory (utils/analysis/plots/tables subdirectories)
- shiny/ directory (optional, with modules)
- output/ directory (plots/tables/reports subdirectories)
- docs/ directory for documentation
}
\examples{
\dontrun{
# Setup with default settings
sz_setup()

# Setup for analysis project only
sz_setup(type = "analysis")

# Setup for Shiny project only
sz_setup(type = "shiny")

# Setup for Gemini
sz_setup(ai = "gemini")

# Setup for both Claude and Gemini
sz_setup(ai = "both")

# Setup without creating project structure
sz_setup(create_project = FALSE)

# Setup with custom project name
sz_setup(project_name = "my_analysis_project")
}
}
